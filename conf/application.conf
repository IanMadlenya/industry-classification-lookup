# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=industry-classification-lookup

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "config.Module"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="OvHkZZmMcANPFyMpHwgjpXq9NJKnmwuxp8YomfkNChrTeqTVZrg89ylSIjO6ybyW"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=config.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes

sic {
    include "sic-codes.json"
    sector {
        A = "AGRICULTURE, FORESTRY AND FISHING"
        B = "MINING AND QUARRYING"
        C = "MANUFACTURING"
        D = "ELECTRICITY, GAS, STEAM AND AIR CONDITIONING SUPPLY"
        E = "WATER SUPPLY; SEWERAGE, WASTE MANAGEMENT AND REMEDIATION ACTIVITIES"
        F = "CONSTRUCTION"
        G = "WHOLESALE AND RETAIL TRADE; REPAIR OF MOTOR VEHICLES AND MOTORCYCLES"
        H = "TRANSPORTATION AND STORAGE"
        I = "ACCOMMODATION AND FOOD SERVICE ACTIVITIES"
        J = "INFORMATION AND COMMUNICATION"
        K = "FINANCIAL AND INSURANCE ACTIVITIES"
        L = "REAL ESTATE ACTIVITIES"
        M = "PROFESSIONAL, SCIENTIFIC AND TECHNICAL ACTIVITIES"
        N = "ADMINISTRATIVE AND SUPPORT SERVICE ACTIVITIES"
        O = "PUBLIC ADMINISTRATION AND DEFENCE; COMPULSORY SOCIAL SECURITY"
        P = "EDUCATION"
        Q = "HUMAN HEALTH AND SOCIAL WORK ACTIVITIES"
        R = "ARTS, ENTERTAINMENT AND RECREATION"
        S = "OTHER SERVICE ACTIVITIES"
        T = "ACTIVITIES OF HOUSEHOLDS AS EMPLOYERS; UNDIFFERENTIATED GOODS-AND SERVICES-PRODUCING ACTIVITIES OF HOUSEHOLDS FOR OWN USE"
        U = "ACTIVITIES OF EXTRATERRITORIAL ORGANISATIONS AND BODIES"
    }
}

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    controllers.LookupController = {
      needsAuth = false
      needsLogging = true
      needsAuditing = false
    }

    controllers.SearchController = {
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=false
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}


mongodb {
    uri = "mongodb://localhost:27017/industry-classification-lookup"
}


microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host=localhost
            port=8500
        }

    }
}


